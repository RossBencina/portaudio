name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  VCPROJ_FILE_PATH: ./build/msvc/portaudio.vcproj
  VCXPROJ_FILE_PATH: ./build/msvc/portaudio.vcxproj
  VCXPROJ_FILTERS_FILE_PATH: ./build/msvc/portaudio.vcxproj.filters
  VCXPROJ_USER_FILE_PATH: ./build/msvc/portaudio.vcxproj.user

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1

    - name: Upgrade Solution
      # Upgrade entire solution and all of its projects to the latest version of MSVC
      # We keep the old version in the repo for backwards compatibility
      # see https://docs.microsoft.com/en-us/visualstudio/ide/reference/upgrade-devenv-exe?view=vs-2019
      # pipe to file to ensure that it terminates https://stackoverflow.com/questions/48896010/occasionally-occurring-msbuild-error-msb3428/48918105#48918105
      #run: devenv ${{env.SOLUTION_FILE_PATH}} /Upgrade /NoSplash
      #run: vswhere -latest -requires Microsoft.Component.MSBuild -find MSBuild\**\Bin\MSBuild.exe
      # we have vswhere, so try using vsdevcmd.bat to add devenv to the path:
      #run:
      #  for /f "usebackq tokens=*" %%i in (`vswhere -latest -products * -requires Microsoft.VisualStudio.Component.VC.Tools.x86.x64 -property installationPath`) do (
      #    set InstallDir=%%i
      #    "%InstallDir%\Common7\Tools\vsdevcmd.bat" %*
      #    devenv ${{env.SOLUTION_FILE_PATH}} /Upgrade /NoSplash
      #  )        
  
      run: |
        $devenv = & vswhere.exe '-property' productPath
        Write-Output "$devenv"
        & $devenv "${{env.VCPROJ_FILE_PATH}}" /Upgrade /NoSplash
        Write-Output "devenv launched"
        while (!(Test-Path "${{env.VCXPROJ_FILE_PATH}}")) { Start-Sleep 10 }
        Write-Output "vcxproj found"
        while (!(Test-Path "${{env.VCXPROJ_FILTERS_FILE_PATH}}")) { Start-Sleep 10 }
        Write-Output "vcxproj.filters found"
        while (!(Test-Path "${{env.VCXPROJ_USER_FILE_PATH}}")) { Start-Sleep 10 }
        Write-Output "vcxproj.user found"
        Start-Sleep -Seconds 10

      #run:
      #  FOR /F "tokens=* USEBACKQ" %%F IN (`vswhere.exe -property productPath`) DO (
      #    SET devenvExe=%%F
      #  )
      #  "%devenvExe%" ${{env.SOLUTION_FILE_PATH}} /Upgrade /NoSplash
      #shell: cmd

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} ${{env.VCXPROJ_FILE_PATH}}
